name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: List root directory contents
        run: ls -la

      - name: Copy submodule contents
        run: |
          if [ -d "AI-API-Integration" ]; then
            mkdir -p ai-api-integration
            cp -R AI-API-Integration/* ai-api-integration/ || true
          else
            echo "AI-API-Integration directory not found"
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install nbconvert
        run: pip install nbconvert

      - name: Convert Jupyter notebooks to HTML
        run: |
          find . -name "*.ipynb" -exec jupyter nbconvert --to html {} \;

      - name: Add front matter to README files
        run: |
          find . -name "README.md" | while read file; do
            if ! grep -q "^---" "$file"; then
              echo -e "---\nlayout: default\n---\n\n$(cat "$file")" > "$file.tmp" && mv "$file.tmp" "$file"
            fi
          done

      - name: Debug - List contents
        run: |
          echo "Contents of root directory:"
          ls -R
          echo "Contents of ai-api-integration:"
          ls -R ai-api-integration || echo "ai-api-integration directory not found"

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          future: true
          verbose: true

      - name: Set permissions
        run: |
          sudo chown -R $USER:$USER ./_site

      - name: Rename README.html to index.html
        run: |
          sudo find ./_site -name "README.html" -exec sh -c 'mv "$0" "${0%README.html}index.html"' {} \;

      - name: Debug - List _site contents
        run: |
          echo "Contents of _site directory:"
          ls -R ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
